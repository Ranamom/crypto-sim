# To use environment variables, create a .env file called '.env'  in the same directory as this file
# Then create variables that match the names of the variables wrapped in ${} in this file.
version: "3"

services:
  webserver:
    build: 
      context: ./bin/webserver
    container_name: 'tnb-webserver'
    env_file: .env
    #restart: 'always'
    ports:
      - "80:80"
      - "443:443"
      - "8079:8079"
    links: 
      - mysql
    volumes: 
      - ${DOCUMENT_ROOT}:/var/www/html
      - ${PHP_INI}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR}:/etc/apache2/sites-enabled
      - ${LOG_DIR}:/var/log/apache2
  mysql:
    build: ./bin/mysql
    container_name: 'tnb-mysql'
    #restart: 'always'
    ports:
      - "3306:3306"
    volumes: 
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      # To change the password of a running database:
      #   - Stop and remove mysql container (docker stop/docker rm)
      #   - Delete everything (except .gitkeep) in data/mysql
      #   - Run 'docker-compose up -d' to run mysql server again
      # This should change the password. The reason for this is because you can't
      # change the password of a database that already exists by just updating this file,
      # you must remove all the data, then rerun it.
      # TODO - Are these environment variables needed? What are they used for?
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'tnb-phpmyadmin'
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - '8080:80'
    volumes: 
      - /sessions
  redis:
    container_name: 'tnb-redis'
    image: redis:latest
    ports:
      - "6379:6379"